"""
Django settings for rezq_backend project.

Generated by 'django-admin startproject' using Django 2.0.2.

For more information on this file, see
https://docs.djangoproject.com/en/2.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.0/ref/settings/
"""
import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

DEBUG = False if os.getenv('DJANGO_PROD') == 'TRUE' else True

if DEBUG:
    SECRET_KEY = '^_94mlso&&f5f8wto-wyuaxwq@+0)ra)d^a2!g&byh6es9k739'
    ALLOWED_HOSTS = ('localhost',)
    FRONTEND_HOSTS = ('localhost',)

    BASE_URL = os.getenv('DJANGO_BASE_URL', 'http://localhost:8000')
    FRONTEND_PORT = os.getenv('FRONTEND_PORT', '8080')
    FRONTEND_URL = f'http://{FRONTEND_HOSTS[0]}:{FRONTEND_PORT}'

    ENVIRONMENT_NAME = 'development server'
    ENVIRONMENT_COLOR = '#808080'
else:
    SECRET_KEY = os.environ['DJANGO_SECRET_KEY']
    ALLOWED_HOSTS = ('api.rezq.io',)
    FRONTEND_HOSTS = ('rezq.io',)
    FRONTEND_URL = 'https://rezq.io'

    SECURE_HSTS_SECONDS = 31536000
    CSRF_COOKIE_SECURE = True
    SESSION_COOKIE_SECURE = True
    SECURE_CONTENT_TYPE_NOSNIFF = True
    SECURE_BROWSER_XSS_FILTER = True
    SECURE_SSL_REDIRECT = True
    SECURE_HSTS_INCLUDE_SUBDOMAINS = True
    SECURE_HSTS_PRELOAD = True
    X_FRAME_OPTIONS = 'DENY'

    ENVIRONMENT_NAME = 'production server'
    ENVIRONMENT_COLOR = '#FF2222'

    ADMIN_PAGE_PATH = os.environ['DJANGO_ADMIN_PAGE_PATH']

    SESSION_COOKIE_DOMAIN = '.rezq.io'
    CSRF_COOKIE_DOMAIN = '.rezq.io'

if len(SECRET_KEY) < 50:
    raise ValueError(f'Secret key is too short ({len(SECRET_KEY)})')


# Application definition

INSTALLED_APPS = (
    'django_admin_env_notice',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'corsheaders',
    'admin_honeypot',
    'django_otp',
    'django_otp.plugins.otp_static',
    'django_otp.plugins.otp_totp',
    'two_factor',
    'graphene_django',
    'rezq.apps.RezqConfig',
)

LOGIN_URL = 'two_factor:login'

if DEBUG:
    INSTALLED_APPS += ('django_extensions',)
else:
    INSTALLED_APPS += ('storages',)

MIDDLEWARE = (
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django_otp.middleware.OTPMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
)

LOGIN_REDIRECT_URL = 'two_factor:profile'

ROOT_URLCONF = 'server.urls'

TEMPLATES = (
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'django_admin_env_notice.context_processors.from_settings',
            ],
        },
    },
)

WSGI_APPLICATION = 'server.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.0/ref/settings/#databases

if DEBUG:
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.sqlite3',
            'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
        },
    }
else:
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.postgresql',
            'NAME': os.getenv('DJANGO_DB_NAME', 'postgres'),
            'USER': os.getenv('DJANGO_DB_USER', 'postgres'),
            'PASSWORD': os.environ['DJANGO_DB_PASSWORD'],
            'HOST': os.environ['DJANGO_DB_HOST'],
            'PORT': os.getenv('DJANGO_DB_PORT', '5432'),
        },
    }

# Password validation
# https://docs.djangoproject.com/en/2.0/ref/settings/#auth-password-validators

PASSWORD_VALIDATION = 'django.contrib.auth.password_validation.'

AUTH_PASSWORD_VALIDATORS = (
    {
        'NAME': PASSWORD_VALIDATION + 'UserAttributeSimilarityValidator',
    },
    {
        'NAME': PASSWORD_VALIDATION + 'MinimumLengthValidator',
    },
    {
        'NAME': PASSWORD_VALIDATION + 'CommonPasswordValidator',
    },
    {
        'NAME': PASSWORD_VALIDATION + 'NumericPasswordValidator',
    },
)

PASSWORD_HASHERS = [
    'django.contrib.auth.hashers.Argon2PasswordHasher',
]


# Logging
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'simple': {
            'format': (
                '[%(asctime)s] [%(levelname)-8s] '
                + '%(name)s.%(funcName)s:%(lineno)s - %(message)s'
            ),
            'datefmt': '%Y-%m-%d %H:%M:%S',
        },
    },
    'handlers': {
        'console': {
            'class': 'logging.StreamHandler',
            'formatter': 'simple',
        },
    },
    'loggers': {
        '': {
            'handlers': ['console'],
            'level': os.getenv('DJANGO_LOG_LEVEL', 'INFO'),
        },
    },
}


# Internationalization
# https://docs.djangoproject.com/en/2.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = False

USE_L10N = False

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.0/howto/static-files/

if DEBUG:
    STATIC_URL = '/static/'
    STATIC_ROOT = os.path.join(BASE_DIR, 'static/')
else:
    AWS_STORAGE_BUCKET_NAME = 'rezq-static'
    AWS_S3_CUSTOM_DOMAIN = f'{AWS_STORAGE_BUCKET_NAME}.s3.amazonaws.com'
    STATIC_URL = f'https://{AWS_S3_CUSTOM_DOMAIN}/'
    STATICFILES_STORAGE = 'storages.backends.s3boto3.S3Boto3Storage'


# Auth

AUTH_USER_MODEL = 'rezq.User'

AUTH_REALM = 'rezq.io'


# CSRF

if DEBUG:
    CSRF_TRUSTED_ORIGINS = tuple(
        f'{x}:{FRONTEND_PORT}' for x in FRONTEND_HOSTS
    )
else:
    CSRF_TRUSTED_ORIGINS = FRONTEND_HOSTS


# CORS

if DEBUG:
    CORS_ORIGIN_WHITELIST = tuple(
        f'{x}:{FRONTEND_PORT}' for x in FRONTEND_HOSTS
    )
else:
    CORS_ORIGIN_WHITELIST = FRONTEND_HOSTS
    CORS_URLS_REGEX = r'^\/v\d+\/.*$'

CORS_ALLOW_CREDENTIALS = True


# S3

S3_RESUME_BUCKET = 'rezq'
S3_AVATAR_BUCKET = 'rezq-avatars'

# EMAIL

if DEBUG:
    EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'
else:
    EMAIL_USE_TLS = True
    EMAIL_HOST = 'smtp.sendgrid.net'
    EMAIL_PORT = 587
    EMAIL_HOST_USER = 'apikey'
    EMAIL_HOST_PASSWORD = os.environ['EMAIL_HOST_PASSWORD']
